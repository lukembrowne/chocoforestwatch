"""Add type column to Prediction table

Revision ID: d102518c5b51
Revises: f3a00ab602a6
Create Date: 2024-09-17 11:20:50.107399

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd102518c5b51'
down_revision = 'f3a00ab602a6'
branch_labels = None
depends_on = None



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
   # op.drop_table('spatial_ref_sys')
    with op.batch_alter_table('prediction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(length=20), nullable=True))

    # Update existing rows
    op.execute("UPDATE prediction SET type = 'land_cover' WHERE type IS NULL")

    # Make the type column non-nullable
    with op.batch_alter_table('prediction', schema=None) as batch_op:
        batch_op.alter_column('type', nullable=False)
    
        batch_op.alter_column('basemap_date',
               existing_type=sa.VARCHAR(length=7),
               nullable=True)


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('prediction', schema=None) as batch_op:
        batch_op.alter_column('basemap_date',
               existing_type=sa.VARCHAR(length=7),
               nullable=False)
        batch_op.drop_column('type')

    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    # ### end Alembic commands ###
